// A compiled package with all of its syntax and semantics
public class Package // TODO change immutable class name to snake_case when supported
{
	public let CompilationUnits: System.Collections.List<Semantic_Node>;
	public let Symbol: Symbol;
	public let PrimitiveTypes: Primitive_Types;

	// TODO constructor not adequately encapsulated to enforce invariants
	public new(compilationUnits: System.Collections.List<Semantic_Node>, primitiveTypes: Primitive_Types, symbol: Symbol)
	{
		CompilationUnits = compilationUnits;
		Symbol = symbol;
		PrimitiveTypes = primitiveTypes;
	}

	public AllDiagnostics(self) -> System.Collections.List<Diagnostic>
	{
		var diagnostics: mut System.Collections.List<Diagnostic> = new System.Collections.List<Diagnostic>();
		for let compilationUnit: Semantic_Node in CompilationUnits
		{
			for let diagnostic: Diagnostic in compilationUnit.AllDiagnostics()
			{
				diagnostics.Add(diagnostic);
			}
		}
		return diagnostics;
	}
}
