public /* abstract */ class Expression // : Program_Fragment
{
    // Program fragment fields
    public let syntax: Syntax;
    public let is_missing: bool;
    public let source: Source_Text;
    public let start: int;
    public let byte_length: int;
    public let children: system.collections.List<Semantic_Node>;
    public let diagnostics: system.collections.List<Diagnostic>;

    // Expression fields
    /// The type of an expression (or variable) before any implicit conversions
    public let of_type: Type?;

    // NOTE: there is no "converted_type" like in roslyn. The idea is to have implicit conversion nodes inserted into the tree as needed.
}
