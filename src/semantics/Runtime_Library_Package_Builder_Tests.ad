public unit_test_build_runtime_library_package() -> void
{
    let primitives_package: Package = build_primitives_package();
    Runtime_Library_Package_contains_system_package(primitives_package);
    System_namespace_contains_console_namespace(primitives_package);
    Console_namespace_contains_Console_class(primitives_package);
    System_namespace_contains_collections_namespace(primitives_package);
    Collections_namespace_contains_List_class(primitives_package);
}

public Runtime_Library_Package_contains_system_package(primitives_package: Package) -> void
{
    let package: Package = build_runtime_library_package(primitives_package);
    assert(get_child_symbol(package.symbol, "system", IdentifierSymbol) =/= none);
}

public System_namespace_contains_console_namespace(primitives_package: Package) -> void
{
    let package: Package = build_runtime_library_package(primitives_package);
    let system_namespace: Symbol? = get_child_symbol(package.symbol, "system", IdentifierSymbol);
    assert(system_namespace =/= none);
    assert(get_child_symbol(system_namespace, "console", IdentifierSymbol) =/= none);
}

public Console_namespace_contains_Console_class(primitives_package: Package) -> void
{
    let package: Package = build_runtime_library_package(primitives_package);
    let system_namespace: Symbol? = get_child_symbol(package.symbol, "system", IdentifierSymbol);
    assert(system_namespace =/= none);
    let console_namespace: Symbol? = get_child_symbol(system_namespace, "console", IdentifierSymbol);
    assert(console_namespace =/= none);
    assert(get_child_symbol(console_namespace, "Console", IdentifierSymbol) =/= none);
}

public System_namespace_contains_collections_namespace(primitives_package: Package) -> void
{
    let package: Package = build_runtime_library_package(primitives_package);
    let system_namespace: Symbol? = get_child_symbol(package.symbol, "system", IdentifierSymbol);
    assert(system_namespace =/= none);
    assert(get_child_symbol(system_namespace, "collections", IdentifierSymbol) =/= none);
}

public Collections_namespace_contains_List_class(primitives_package: Package) -> void
{
    let package: Package = build_runtime_library_package(primitives_package);
    let system_namespace: Symbol? = get_child_symbol(package.symbol, "system", IdentifierSymbol);
    assert(system_namespace =/= none);
    let collections_namespace: Symbol? = get_child_symbol(system_namespace, "collections", IdentifierSymbol);
    assert(collections_namespace =/= none);
    assert(get_child_symbol(collections_namespace, "List", IdentifierSymbol) =/= none);
}
