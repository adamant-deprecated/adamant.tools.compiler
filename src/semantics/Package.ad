/// A compiled package with all of its syntax and semantics
public class Package
{
    public let name: Package_Name;
    public let references: system.collections.List<Package_Reference>;
    public let compilation_units: system.collections.List<Compilation_Unit>;
    public let symbol: Symbol;

    // TODO constructor not adequately encapsulated to enforce invariants
    public new(
        name: Package_Name,
        references: system.collections.List<Package_Reference>,
        compilation_units: system.collections.List<Compilation_Unit>,
        symbol: Symbol)
    {
        self.name = name;
        self.references = references;
        self.compilation_units = compilation_units;
        self.symbol = symbol;
    }
}

public all_diagnostics(package: Package) -> system.collections.List<Diagnostic>
{
    var diagnostics: mut system.collections.List<Diagnostic> = new system.collections.List<Diagnostic>();
    for let compilation_unit: Compilation_Unit in package.compilation_units
    {
        collect_diagnostics(compilation_unit, diagnostics);
    }
    return diagnostics;
}
