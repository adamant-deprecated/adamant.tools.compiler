// A function type is the type of a declared function, method or constructor.
// A function type may be generic and have generic parameters
public class Function_Type // : Type
{
    public let name: Name; // Must be first to match `Type`
    public let generic_parameters: system.collections.List<Generic_Parameter>;
    // TODO type arguments can be values, not just types
    public let generic_arguments: system.collections.List<Type?>;

    public let parameter_types: system.collections.List<Type>;
    public let return_type: Type;

    public new(name: Name, parameter_types: system.collections.List<Type>, return_type: Type)
    {
        self.name = name;
        self.generic_parameters = new system.collections.List<Generic_Parameter>();
        self.generic_arguments = new system.collections.List<Type?>();
        self.parameter_types = parameter_types;
        self.return_type = return_type;
    }

    public new(
        name: Name,
        generic_parameters: system.collections.List<Generic_Parameter>,
        parameter_types: system.collections.List<Type>,
        return_type: Type)
    {
        self.name = name;
        self.generic_parameters = generic_parameters;
        self.generic_arguments = no_generic_arguments(generic_parameters);
        self.parameter_types = parameter_types;
        self.return_type = return_type;
    }
}

public function_type_as_type(type: Function_Type) -> Type
{
    return as_any(type);
}
